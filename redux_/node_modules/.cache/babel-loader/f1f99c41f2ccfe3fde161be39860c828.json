{"ast":null,"code":"var _jsxFileName = \"/Users/maikegeleidi/Desktop/Other/React/redux/src/app.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Home from './home';\nimport Main from './main';\nimport Add from './add';\nimport Footer from \"./foot\";\n\nclass App extends React.Component {\n  // constructor(props){\n  //     super(props);\n  //     this.now = 0;\n  //     this.state = {\n  //         data:[\n  //             {\n  //                 id       : 0,\n  //                 title    : \"空白格11\",\n  //                 singer   : \"蔡健雅11\",\n  //                 selected : true,\n  //                 like     : false\n  //             },{\n  //                 id       : 1,\n  //                 title    : \"空白格22\",\n  //                 singer   : \"蔡健雅2222\",\n  //                 selected : true,\n  //                 like     : false\n  //             },{\n  //                 id       : 2,\n  //                 title    : \"空白格33\",\n  //                 singer   : \"蔡健雅33333\",\n  //                 selected : true,\n  //                 like     : false\n  //             },{\n  //                 id       : 3,\n  //                 title    : \"空白格33\",\n  //                 singer   : \"蔡健雅33333\",\n  //                 selected : true,\n  //                 like     : false\n  //             }\n  //         ]\n  //     }\n  //     this.add = this.add.bind(this);\n  //     this.checkAll = this.checkAll.bind(this);\n  //     this.setCheck = this.setCheck.bind(this);\n  //     this.setLike = this.setLike.bind(this);\n  //     this.remove = this.remove.bind(this);\n  //     this.removeSelect = this.removeSelect.bind(this);\n  //     this.likeSelect = this.likeSelect.bind(this);\n  //     this.cancelLikeSelect = this.cancelLikeSelect.bind(this);\n  // }\n  //\n  // add(title,singer){\n  //     let data = this.state.data;\n  //     if (!title && !singer) return;\n  //     data.push({\n  //         id:this.now,\n  //         title:title,\n  //         singer:singer,\n  //         selected :false,\n  //         like:false\n  //     });\n  //     this.now++;\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  // isCheckAll(){\n  //\n  //     let data = this.state.data;\n  //     for(let i = 0; i < data.length; i++){\n  //         if(!data[i].selected){\n  //             return false;\n  //         }\n  //     }\n  //     return true;\n  // }\n  //\n  // checkAll(checked){\n  //     let data = this.state.data.map((value)=>{\n  //         value.selected = checked;\n  //         return value;\n  //     });\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // setCheck(index,checked){\n  //     let data = this.state.data;\n  //     data.forEach((val)=>{\n  //         if (val.id === index){\n  //             val.selected = checked;\n  //         }\n  //     });\n  //     this.setState({\n  //         data\n  //     })\n  //     // data[index].selected  = checked;\n  //     // this.setState({\n  //     //     data\n  //     // })\n  // }\n  //\n  // setLike(index,checked){\n  //     let data = this.state.data;\n  //     // data[index].like = checked;\n  //     data.forEach((val)=>{\n  //         if (val.id === index){\n  //             val.like = checked;\n  //         }\n  //     });\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // remove(index){\n  //     let data = this.state.data.filter((val)=> val.id!== index);\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // removeSelect(){\n  //     let data = this.state.data.filter((val)=> !val.selected);\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // likeSelect(){\n  //     let data = this.state.data.map((val)=>{\n  //         if (val.selected){\n  //             val.like = true;\n  //         }\n  //         return val;\n  //     })\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // cancelLikeSelect(){\n  //     let data = this.state.data.map((val)=>{\n  //         if (val.selected){\n  //             val.like = false;\n  //         }\n  //         return val;\n  //     })\n  //     this.setState({\n  //         data\n  //     })\n  // }\n  //\n  // shouldComponentUpdate(nextProps, nextState, nextContext) {\n  //     if(!nextState.listState){\n  //         let likeData = nextState.data.filter((val)=>val.like);\n  //         if (!likeData.length){\n  //             this.setState({\n  //                 listState:true\n  //             });\n  //             return false\n  //         }\n  //     }\n  //     return true;\n  // }\n  judgeIsPalindrome(str) {\n    if (null == str || str.length < 2) {\n      return 'false';\n    } else {\n      if (str.split(\"\").reverse().join(\"\") === str) {\n        alert('true');\n        return 'true';\n      } else {\n        alert('false');\n        return 'false';\n      }\n    }\n  }\n\n  render() {\n    this.judgeIsPalindrome('黄山落叶松叶落山黄');\n    console.log(this.props);\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"  \", React.createElement(\"div\", {\n      id: \"musicApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/add\",\n      component: Add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), \" \", React.createElement(Route, {\n      path: \"/\",\n      render: e => {\n        if (this.props.data.length < 1) {\n          return React.createElement(Redirect, {\n            to: \"/add\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          });\n          /*<!--路由重定向 !-->*/\n        }\n\n        return React.createElement(Home, {\n          router: e,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(state => state)(App);\n{}\n/*<!-- redux包裹关联当前模块的属性及状态返回一个新的组件 !-->*/\n// export default  connect((state,props)=>{\n//     console.log(state,props);\n//     return state;\n// })(App);","map":{"version":3,"sources":["/Users/maikegeleidi/Desktop/Other/React/redux/src/app.js"],"names":["React","connect","BrowserRouter","Route","Switch","Redirect","ReactDOM","Home","Main","Add","Footer","App","Component","judgeIsPalindrome","str","length","split","reverse","join","alert","render","console","log","props","e","data","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAsBC,KAAtB,EAA4BC,MAA5B,EAAmCC,QAAnC,QAAmD,kBAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAQC,IAAR,MAAkB,QAAlB;AACA,OAAQC,IAAR,MAAkB,QAAlB;AACA,OAAQC,GAAR,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AACA,MAAMC,GAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,CAAEC,GAAF,EAAM;AACnB,QAAI,QAAQA,GAAR,IAAeA,GAAG,CAACC,MAAJ,GAAa,CAAhC,EAAmC;AAC/B,aAAO,OAAP;AACH,KAFD,MAEO;AACH,UAAID,GAAG,CAACE,KAAJ,CAAU,EAAV,EAAcC,OAAd,GAAwBC,IAAxB,CAA6B,EAA7B,MAAqCJ,GAAzC,EACA;AAEIK,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA,eAAO,MAAP;AACH,OALD,MAKO;AACHA,QAAAA,KAAK,CAAC,OAAD,CAAL;AACA,eAAO,OAAP;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,SAAKP,iBAAL,CAAuB,WAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,SAAS,EAAEd,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAiB,MAAA,MAAM,EAAGe,CAAD,IAAK;AAC1B,YAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBV,MAAhB,GAAyB,CAA5B,EAA8B;AAC1B,iBAAQ,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAA8B;AACjC;;AACD,eAAO,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAES,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,CADJ;AAiBH;;AApM8B;;AAsMnC,eAAgBvB,OAAO,CAAEyB,KAAD,IAASA,KAAV,CAAP,CAAwBf,GAAxB,CAAhB;AACA,CAA2C;AAA1C;AAGD;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\"\nimport {BrowserRouter,Route,Switch,Redirect } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport  Home from './home'\nimport  Main from './main'\nimport  Add  from './add'\nimport Footer from \"./foot\";\nclass App extends  React.Component {\n    // constructor(props){\n    //     super(props);\n    //     this.now = 0;\n    //     this.state = {\n    //         data:[\n    //             {\n    //                 id       : 0,\n    //                 title    : \"空白格11\",\n    //                 singer   : \"蔡健雅11\",\n    //                 selected : true,\n    //                 like     : false\n    //             },{\n    //                 id       : 1,\n    //                 title    : \"空白格22\",\n    //                 singer   : \"蔡健雅2222\",\n    //                 selected : true,\n    //                 like     : false\n    //             },{\n    //                 id       : 2,\n    //                 title    : \"空白格33\",\n    //                 singer   : \"蔡健雅33333\",\n    //                 selected : true,\n    //                 like     : false\n    //             },{\n    //                 id       : 3,\n    //                 title    : \"空白格33\",\n    //                 singer   : \"蔡健雅33333\",\n    //                 selected : true,\n    //                 like     : false\n    //             }\n    //         ]\n    //     }\n    //     this.add = this.add.bind(this);\n    //     this.checkAll = this.checkAll.bind(this);\n    //     this.setCheck = this.setCheck.bind(this);\n    //     this.setLike = this.setLike.bind(this);\n    //     this.remove = this.remove.bind(this);\n    //     this.removeSelect = this.removeSelect.bind(this);\n    //     this.likeSelect = this.likeSelect.bind(this);\n    //     this.cancelLikeSelect = this.cancelLikeSelect.bind(this);\n    // }\n    //\n    // add(title,singer){\n    //     let data = this.state.data;\n    //     if (!title && !singer) return;\n    //     data.push({\n    //         id:this.now,\n    //         title:title,\n    //         singer:singer,\n    //         selected :false,\n    //         like:false\n    //     });\n    //     this.now++;\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    // isCheckAll(){\n    //\n    //     let data = this.state.data;\n    //     for(let i = 0; i < data.length; i++){\n    //         if(!data[i].selected){\n    //             return false;\n    //         }\n    //     }\n    //     return true;\n    // }\n    //\n    // checkAll(checked){\n    //     let data = this.state.data.map((value)=>{\n    //         value.selected = checked;\n    //         return value;\n    //     });\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // setCheck(index,checked){\n    //     let data = this.state.data;\n    //     data.forEach((val)=>{\n    //         if (val.id === index){\n    //             val.selected = checked;\n    //         }\n    //     });\n    //     this.setState({\n    //         data\n    //     })\n    //     // data[index].selected  = checked;\n    //     // this.setState({\n    //     //     data\n    //     // })\n    // }\n    //\n    // setLike(index,checked){\n    //     let data = this.state.data;\n    //     // data[index].like = checked;\n    //     data.forEach((val)=>{\n    //         if (val.id === index){\n    //             val.like = checked;\n    //         }\n    //     });\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // remove(index){\n    //     let data = this.state.data.filter((val)=> val.id!== index);\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // removeSelect(){\n    //     let data = this.state.data.filter((val)=> !val.selected);\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // likeSelect(){\n    //     let data = this.state.data.map((val)=>{\n    //         if (val.selected){\n    //             val.like = true;\n    //         }\n    //         return val;\n    //     })\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // cancelLikeSelect(){\n    //     let data = this.state.data.map((val)=>{\n    //         if (val.selected){\n    //             val.like = false;\n    //         }\n    //         return val;\n    //     })\n    //     this.setState({\n    //         data\n    //     })\n    // }\n    //\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\n    //     if(!nextState.listState){\n    //         let likeData = nextState.data.filter((val)=>val.like);\n    //         if (!likeData.length){\n    //             this.setState({\n    //                 listState:true\n    //             });\n    //             return false\n    //         }\n    //     }\n    //     return true;\n    // }\n\n    judgeIsPalindrome (str){\n        if (null == str || str.length < 2) {\n            return 'false';\n        } else {\n            if (str.split(\"\").reverse().join(\"\") === str)\n            {\n\n                alert('true');\n                return 'true';\n            } else {\n                alert('false');\n                return 'false';\n            }\n        }\n    }\n\n    render(){\n\n        this.judgeIsPalindrome('黄山落叶松叶落山黄');\n        console.log(this.props);\n        return(\n            <BrowserRouter>  {/*<!--包裹导航的 !-->*/}\n                <div id=\"musicApp\">\n                    <Switch>\n                        <Route  path=\"/add\" component={Add}/> {/*<!--路由注册 !-->*/}\n                        <Route  path=\"/\" render={(e)=>{\n                            if(this.props.data.length < 1){\n                                return  <Redirect to=\"/add\"/> /*<!--路由重定向 !-->*/\n                            }\n                            return <Home router={e}/>\n                        }}/>\n                    </Switch>\n\n                </div>\n            </BrowserRouter>\n\n        );\n    }\n}\nexport default  connect((state)=>state)(App);\n{/*<!-- redux包裹关联当前模块的属性及状态返回一个新的组件 !-->*/}\n\n\n// export default  connect((state,props)=>{\n//     console.log(state,props);\n//     return state;\n// })(App);"]},"metadata":{},"sourceType":"module"}